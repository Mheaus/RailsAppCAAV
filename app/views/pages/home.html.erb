<nav class="__home-links">
  <div class="__left">
    <a href="#">Ajouter une Annonce</a>
    <a href="#" class="-display-n-sm">Droits</a>
    <a href="#" class="-display-n-sm">Partenaires</a>
  </div>
  <div class="__right">
    <a href="#">Se Connecter</a>
  </div>
</nav>
<header class="__home">
  <%= inline_svg "logo.svg", class: "_background-logo" %>
  <h1>Vous êtes au bon endroit pour <span>trouver</span> un commerce ambulant</h1>
  <div class="__cta-button-search">
    <span>Rechercher</span>
    <%= inline_svg "ic_search.svg", class: "_ic-search" %>
  </div>
  <a class="_announces-all" href="/announces">Voir Toutes les Annonces ></a>
  <% form_tag announces_path, method: :get, class: "__search-input" do %>
    <input type="search" class="_input" placeholder="« Essayez Bordeaux »">
    <%= link_to announces_path, class: "_button-search" do %>
    <svg class="svg-inline--fa fa-search fa-w-16" aria-hidden="true" data-prefix="fa" data-icon="search" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" data-fa-i2svg=""><path fill="currentColor" d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"></path></svg>
    <% end %>
  <% end %>
</header>
<section class="__last-annonces">
  <div class="__titles">
    <h2 class="_title">Dernières<br>Annonces</h2>
    <p class="_subtitle">Annonces les plus récentes autour de vous</p>
  </div>
  <div id="annonces-container">
    <% @last_announces.each do |announce| %>
      <%= link_to announce_path(announce), id: "annonce-item#{announce.id}", class: "__annonce-item" do %>
        <div class="__picture" style="background-image: <%= "url(#{cl_image_path(announce.picture)})" %>">
          <span class="_address"><%= announce.address %></span>
        </div>
        <div class="__info">
          <p class="_created-at"><%= l(announce.created_at, format: "%-d Mars %Y") %></p>
          <p class="_title"><%= announce.title %></p>
          <p class="_description"><%= announce.description.first(120) + "..." %></p>
          <div class="__call-to-action">
            <%= inline_svg "ic_circled_arrow_right.svg", class: "_icon" %>
            <p>En savoir plus</p>
          </div>
        </div>
      <% end %>
    <% end %>
  </div>
</section>
<footer>

</footer>

<% content_for :after_js do %>
  <script type="text/javascript">
  const headerBackground = document.querySelector("._background-header");

  function displayHeaderBackground() {
    headerBackground.classList.add("-fadeUp");
  }
  headerBackground.addEventListener("onload", displayHeaderBackground());

  const menuButton = document.querySelector('.navigation-button');
  const menuContainer = document.querySelector('.navigation-container')
  const menuItems = document.querySelectorAll('.navigation-container__item');

  function displayMenu(e) {
    this.classList.toggle('active')
    if (menuContainer.classList.contains('-hidden')) {
      menuContainer.classList.toggle('-hidden');
      window.setTimeout(function(){
        menuItems.forEach(item => item.classList.toggle('-hidden'))
      }, 500)
    } else {
      menuItems.forEach(item => item.classList.toggle('-hidden'));
      window.setTimeout(function(){
        menuContainer.classList.toggle('-hidden');
      }, 500)
    }
  }
  menuButton.addEventListener('click', displayMenu)

  // hide and show go-to-top button

  function isInViewport(element) {
    var rect = element.getBoundingClientRect();
    var html = document.documentElement;
    return (
      rect.top >= 0 &&
      rect.left >= 0 &&
      rect.bottom <= (window.innerHeight || html.clientHeight) &&
      rect.right <= (window.innerWidth || html.clientWidth)
    );
  }
  const annoncesScrollButton = document.querySelector('.discover');
  const buttonToTop = document.querySelector('.button-to-top');

  // set fixed height for the frame

  const body = document.body,
  html = document.documentElement;
  const frame = document.querySelector('.frame');


  // set fixed height for input buttons
  const contactInputAdd = document.querySelector('.contact-input.__add');
  const contactInputShow = document.querySelector('.contact-input.__show');
  const inputButtons = document.querySelectorAll('.contact-input>.contact-input__button');

  function expandInput() {
    const type =  this.dataset.type;
    if (type === "add") {
      contactInputAdd.classList.toggle('-expand');
      contactInputShow.classList.remove('-expand');
    } else {
      contactInputShow.classList.toggle('-expand');
      contactInputAdd.classList.remove('-expand');
    }
  };

  inputButtons.forEach(button =>  button.addEventListener('click', expandInput));


  function frameHeight() {
    let height = Math.max(
      body.scrollHeight,
      body.offsetHeight,
      html.clientHeight,
      html.scrollHeight,
      html.offsetHeight
    );
    frame.style.height=`${height}px`;
  };

  const h1 = document.querySelector("h1");

  function displayButtonToTop() {
    if (isInViewport(annoncesScrollButton)) {
      buttonToTop.classList.add('-hidden');
    } else {
      buttonToTop.classList.remove('-hidden');
    }
  };

  window.onscroll = function(e) {
    frameHeight();
    displayButtonToTop();
  };

  const buttonsMore = document.querySelectorAll(".__button-more");
  const annoncesContainer = document .querySelector("#annonces-container");

  function slideAnnonceContainer() {
    if (this.classList.contains("_right")) {

    }
  }

  buttonsMore.forEach(button => button.addEventListener("click", slideAnnonceContainer));

  // when .__button-more.onclick if .annonce-item:first-of-type isInViewport buttonMoreLeft.classList.toggle('_off')
  // when .__button-more.onclick if .annonce-item:last-of-type isInViewport buttonMoreRight.classList.toggle('_off')
</script>
<% end %>
